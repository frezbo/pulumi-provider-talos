// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package talos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Applies machine configuration to a Talos node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//	"io/ioutil"
//
//	"github.com/pulumi/pulumi-talos/sdk/go/talos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func readFileOrPanic(path string) pulumi.StringPtrInput {
//		data, err := ioutil.ReadFile(path)
//		if err != nil {
//			panic(err.Error())
//		}
//		return pulumi.String(string(data))
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			machineSecrets, err := talos.NewTalosMachineSecrets(ctx, "machineSecrets", nil)
//			if err != nil {
//				return err
//			}
//			talosconfig, err := talos.NewTalosClientConfiguration(ctx, "talosconfig", &talos.TalosClientConfigurationArgs{
//				ClusterName:    pulumi.String("example-cluster"),
//				MachineSecrets: machineSecrets.MachineSecrets,
//				Endpoints: pulumi.StringArray{
//					pulumi.String("10.5.0.2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			machineconfigCp, err := talos.NewTalosMachineConfigurationControlplane(ctx, "machineconfigCp", &talos.TalosMachineConfigurationControlplaneArgs{
//				ClusterName:     talosconfig.ClusterName,
//				ClusterEndpoint: pulumi.String("https://cluster.local:6443"),
//				MachineSecrets:  machineSecrets.MachineSecrets,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = talos.NewTalosMachineConfigurationApply(ctx, "configApply", &talos.TalosMachineConfigurationApplyArgs{
//				TalosConfig:          talosconfig.TalosConfig,
//				MachineConfiguration: machineconfigCp.MachineConfig,
//				ConfigPatches: pulumi.StringArray{
//					readFileOrPanic(fmt.Sprintf("%v/files/worker.yaml", path.Module)),
//				},
//				Endpoint: pulumi.String("10.5.0.2"),
//				Node:     pulumi.String("10.5.0.2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type TalosMachineConfigurationApply struct {
	pulumi.CustomResourceState

	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayOutput `pulumi:"configPatches"`
	// machine endpoint
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// machine configuration
	MachineConfiguration pulumi.StringOutput `pulumi:"machineConfiguration"`
	// The mode to apply the configuration in.
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// node to apply the config against
	Node pulumi.StringOutput `pulumi:"node"`
	// talos client configuration for authentication
	TalosConfig pulumi.StringOutput `pulumi:"talosConfig"`
}

// NewTalosMachineConfigurationApply registers a new resource with the given unique name, arguments, and options.
func NewTalosMachineConfigurationApply(ctx *pulumi.Context,
	name string, args *TalosMachineConfigurationApplyArgs, opts ...pulumi.ResourceOption) (*TalosMachineConfigurationApply, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.MachineConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'MachineConfiguration'")
	}
	if args.Node == nil {
		return nil, errors.New("invalid value for required argument 'Node'")
	}
	if args.TalosConfig == nil {
		return nil, errors.New("invalid value for required argument 'TalosConfig'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TalosMachineConfigurationApply
	err := ctx.RegisterResource("talos:index/talosMachineConfigurationApply:TalosMachineConfigurationApply", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTalosMachineConfigurationApply gets an existing TalosMachineConfigurationApply resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTalosMachineConfigurationApply(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TalosMachineConfigurationApplyState, opts ...pulumi.ResourceOption) (*TalosMachineConfigurationApply, error) {
	var resource TalosMachineConfigurationApply
	err := ctx.ReadResource("talos:index/talosMachineConfigurationApply:TalosMachineConfigurationApply", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TalosMachineConfigurationApply resources.
type talosMachineConfigurationApplyState struct {
	// config patches to apply to the generated config
	ConfigPatches []string `pulumi:"configPatches"`
	// machine endpoint
	Endpoint *string `pulumi:"endpoint"`
	// machine configuration
	MachineConfiguration *string `pulumi:"machineConfiguration"`
	// The mode to apply the configuration in.
	Mode *string `pulumi:"mode"`
	// node to apply the config against
	Node *string `pulumi:"node"`
	// talos client configuration for authentication
	TalosConfig *string `pulumi:"talosConfig"`
}

type TalosMachineConfigurationApplyState struct {
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayInput
	// machine endpoint
	Endpoint pulumi.StringPtrInput
	// machine configuration
	MachineConfiguration pulumi.StringPtrInput
	// The mode to apply the configuration in.
	Mode pulumi.StringPtrInput
	// node to apply the config against
	Node pulumi.StringPtrInput
	// talos client configuration for authentication
	TalosConfig pulumi.StringPtrInput
}

func (TalosMachineConfigurationApplyState) ElementType() reflect.Type {
	return reflect.TypeOf((*talosMachineConfigurationApplyState)(nil)).Elem()
}

type talosMachineConfigurationApplyArgs struct {
	// config patches to apply to the generated config
	ConfigPatches []string `pulumi:"configPatches"`
	// machine endpoint
	Endpoint string `pulumi:"endpoint"`
	// machine configuration
	MachineConfiguration string `pulumi:"machineConfiguration"`
	// The mode to apply the configuration in.
	Mode *string `pulumi:"mode"`
	// node to apply the config against
	Node string `pulumi:"node"`
	// talos client configuration for authentication
	TalosConfig string `pulumi:"talosConfig"`
}

// The set of arguments for constructing a TalosMachineConfigurationApply resource.
type TalosMachineConfigurationApplyArgs struct {
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayInput
	// machine endpoint
	Endpoint pulumi.StringInput
	// machine configuration
	MachineConfiguration pulumi.StringInput
	// The mode to apply the configuration in.
	Mode pulumi.StringPtrInput
	// node to apply the config against
	Node pulumi.StringInput
	// talos client configuration for authentication
	TalosConfig pulumi.StringInput
}

func (TalosMachineConfigurationApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*talosMachineConfigurationApplyArgs)(nil)).Elem()
}

type TalosMachineConfigurationApplyInput interface {
	pulumi.Input

	ToTalosMachineConfigurationApplyOutput() TalosMachineConfigurationApplyOutput
	ToTalosMachineConfigurationApplyOutputWithContext(ctx context.Context) TalosMachineConfigurationApplyOutput
}

func (*TalosMachineConfigurationApply) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosMachineConfigurationApply)(nil)).Elem()
}

func (i *TalosMachineConfigurationApply) ToTalosMachineConfigurationApplyOutput() TalosMachineConfigurationApplyOutput {
	return i.ToTalosMachineConfigurationApplyOutputWithContext(context.Background())
}

func (i *TalosMachineConfigurationApply) ToTalosMachineConfigurationApplyOutputWithContext(ctx context.Context) TalosMachineConfigurationApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosMachineConfigurationApplyOutput)
}

// TalosMachineConfigurationApplyArrayInput is an input type that accepts TalosMachineConfigurationApplyArray and TalosMachineConfigurationApplyArrayOutput values.
// You can construct a concrete instance of `TalosMachineConfigurationApplyArrayInput` via:
//
//	TalosMachineConfigurationApplyArray{ TalosMachineConfigurationApplyArgs{...} }
type TalosMachineConfigurationApplyArrayInput interface {
	pulumi.Input

	ToTalosMachineConfigurationApplyArrayOutput() TalosMachineConfigurationApplyArrayOutput
	ToTalosMachineConfigurationApplyArrayOutputWithContext(context.Context) TalosMachineConfigurationApplyArrayOutput
}

type TalosMachineConfigurationApplyArray []TalosMachineConfigurationApplyInput

func (TalosMachineConfigurationApplyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TalosMachineConfigurationApply)(nil)).Elem()
}

func (i TalosMachineConfigurationApplyArray) ToTalosMachineConfigurationApplyArrayOutput() TalosMachineConfigurationApplyArrayOutput {
	return i.ToTalosMachineConfigurationApplyArrayOutputWithContext(context.Background())
}

func (i TalosMachineConfigurationApplyArray) ToTalosMachineConfigurationApplyArrayOutputWithContext(ctx context.Context) TalosMachineConfigurationApplyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosMachineConfigurationApplyArrayOutput)
}

// TalosMachineConfigurationApplyMapInput is an input type that accepts TalosMachineConfigurationApplyMap and TalosMachineConfigurationApplyMapOutput values.
// You can construct a concrete instance of `TalosMachineConfigurationApplyMapInput` via:
//
//	TalosMachineConfigurationApplyMap{ "key": TalosMachineConfigurationApplyArgs{...} }
type TalosMachineConfigurationApplyMapInput interface {
	pulumi.Input

	ToTalosMachineConfigurationApplyMapOutput() TalosMachineConfigurationApplyMapOutput
	ToTalosMachineConfigurationApplyMapOutputWithContext(context.Context) TalosMachineConfigurationApplyMapOutput
}

type TalosMachineConfigurationApplyMap map[string]TalosMachineConfigurationApplyInput

func (TalosMachineConfigurationApplyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TalosMachineConfigurationApply)(nil)).Elem()
}

func (i TalosMachineConfigurationApplyMap) ToTalosMachineConfigurationApplyMapOutput() TalosMachineConfigurationApplyMapOutput {
	return i.ToTalosMachineConfigurationApplyMapOutputWithContext(context.Background())
}

func (i TalosMachineConfigurationApplyMap) ToTalosMachineConfigurationApplyMapOutputWithContext(ctx context.Context) TalosMachineConfigurationApplyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosMachineConfigurationApplyMapOutput)
}

type TalosMachineConfigurationApplyOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigurationApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosMachineConfigurationApply)(nil)).Elem()
}

func (o TalosMachineConfigurationApplyOutput) ToTalosMachineConfigurationApplyOutput() TalosMachineConfigurationApplyOutput {
	return o
}

func (o TalosMachineConfigurationApplyOutput) ToTalosMachineConfigurationApplyOutputWithContext(ctx context.Context) TalosMachineConfigurationApplyOutput {
	return o
}

// config patches to apply to the generated config
func (o TalosMachineConfigurationApplyOutput) ConfigPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationApply) pulumi.StringArrayOutput { return v.ConfigPatches }).(pulumi.StringArrayOutput)
}

// machine endpoint
func (o TalosMachineConfigurationApplyOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationApply) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// machine configuration
func (o TalosMachineConfigurationApplyOutput) MachineConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationApply) pulumi.StringOutput { return v.MachineConfiguration }).(pulumi.StringOutput)
}

// The mode to apply the configuration in.
func (o TalosMachineConfigurationApplyOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationApply) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// node to apply the config against
func (o TalosMachineConfigurationApplyOutput) Node() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationApply) pulumi.StringOutput { return v.Node }).(pulumi.StringOutput)
}

// talos client configuration for authentication
func (o TalosMachineConfigurationApplyOutput) TalosConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationApply) pulumi.StringOutput { return v.TalosConfig }).(pulumi.StringOutput)
}

type TalosMachineConfigurationApplyArrayOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigurationApplyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TalosMachineConfigurationApply)(nil)).Elem()
}

func (o TalosMachineConfigurationApplyArrayOutput) ToTalosMachineConfigurationApplyArrayOutput() TalosMachineConfigurationApplyArrayOutput {
	return o
}

func (o TalosMachineConfigurationApplyArrayOutput) ToTalosMachineConfigurationApplyArrayOutputWithContext(ctx context.Context) TalosMachineConfigurationApplyArrayOutput {
	return o
}

func (o TalosMachineConfigurationApplyArrayOutput) Index(i pulumi.IntInput) TalosMachineConfigurationApplyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TalosMachineConfigurationApply {
		return vs[0].([]*TalosMachineConfigurationApply)[vs[1].(int)]
	}).(TalosMachineConfigurationApplyOutput)
}

type TalosMachineConfigurationApplyMapOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigurationApplyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TalosMachineConfigurationApply)(nil)).Elem()
}

func (o TalosMachineConfigurationApplyMapOutput) ToTalosMachineConfigurationApplyMapOutput() TalosMachineConfigurationApplyMapOutput {
	return o
}

func (o TalosMachineConfigurationApplyMapOutput) ToTalosMachineConfigurationApplyMapOutputWithContext(ctx context.Context) TalosMachineConfigurationApplyMapOutput {
	return o
}

func (o TalosMachineConfigurationApplyMapOutput) MapIndex(k pulumi.StringInput) TalosMachineConfigurationApplyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TalosMachineConfigurationApply {
		return vs[0].(map[string]*TalosMachineConfigurationApply)[vs[1].(string)]
	}).(TalosMachineConfigurationApplyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigurationApplyInput)(nil)).Elem(), &TalosMachineConfigurationApply{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigurationApplyArrayInput)(nil)).Elem(), TalosMachineConfigurationApplyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigurationApplyMapInput)(nil)).Elem(), TalosMachineConfigurationApplyMap{})
	pulumi.RegisterOutputType(TalosMachineConfigurationApplyOutput{})
	pulumi.RegisterOutputType(TalosMachineConfigurationApplyArrayOutput{})
	pulumi.RegisterOutputType(TalosMachineConfigurationApplyMapOutput{})
}
