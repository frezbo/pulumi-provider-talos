// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package talos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Generate a machine configuration for a node type
//
// > **Note:** Since Talos natively supports `.machine.install.diskSelector`, the `TalosMachineDisks` data source maybe just used to query disk information that could be used elsewhere. It's recommended to use `machine.install.diskSelector` in Talos machine configuration.
func TalosMachineDisks(ctx *pulumi.Context, args *TalosMachineDisksArgs, opts ...pulumi.InvokeOption) (*TalosMachineDisksResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv TalosMachineDisksResult
	err := ctx.Invoke("talos:index/talosMachineDisks:TalosMachineDisks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking TalosMachineDisks.
type TalosMachineDisksArgs struct {
	// The client configuration data
	ClientConfiguration TalosMachineDisksClientConfiguration `pulumi:"clientConfiguration"`
	// endpoint to use for the talosclient. if not set, the node value will be used
	Endpoint *string `pulumi:"endpoint"`
	// Filters to apply to the disks
	Filters *TalosMachineDisksFilters `pulumi:"filters"`
	// controlplane node to retrieve the kubeconfig from
	Node     string                     `pulumi:"node"`
	Timeouts *TalosMachineDisksTimeouts `pulumi:"timeouts"`
}

// A collection of values returned by TalosMachineDisks.
type TalosMachineDisksResult struct {
	// The client configuration data
	ClientConfiguration TalosMachineDisksClientConfiguration `pulumi:"clientConfiguration"`
	// The disks that match the filters
	Disks []TalosMachineDisksDisk `pulumi:"disks"`
	// endpoint to use for the talosclient. if not set, the node value will be used
	Endpoint string `pulumi:"endpoint"`
	// Filters to apply to the disks
	Filters *TalosMachineDisksFilters `pulumi:"filters"`
	// The generated ID of this resource
	Id string `pulumi:"id"`
	// controlplane node to retrieve the kubeconfig from
	Node     string                     `pulumi:"node"`
	Timeouts *TalosMachineDisksTimeouts `pulumi:"timeouts"`
}

func TalosMachineDisksOutput(ctx *pulumi.Context, args TalosMachineDisksOutputArgs, opts ...pulumi.InvokeOption) TalosMachineDisksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (TalosMachineDisksResult, error) {
			args := v.(TalosMachineDisksArgs)
			r, err := TalosMachineDisks(ctx, &args, opts...)
			var s TalosMachineDisksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(TalosMachineDisksResultOutput)
}

// A collection of arguments for invoking TalosMachineDisks.
type TalosMachineDisksOutputArgs struct {
	// The client configuration data
	ClientConfiguration TalosMachineDisksClientConfigurationInput `pulumi:"clientConfiguration"`
	// endpoint to use for the talosclient. if not set, the node value will be used
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Filters to apply to the disks
	Filters TalosMachineDisksFiltersPtrInput `pulumi:"filters"`
	// controlplane node to retrieve the kubeconfig from
	Node     pulumi.StringInput                `pulumi:"node"`
	Timeouts TalosMachineDisksTimeoutsPtrInput `pulumi:"timeouts"`
}

func (TalosMachineDisksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosMachineDisksArgs)(nil)).Elem()
}

// A collection of values returned by TalosMachineDisks.
type TalosMachineDisksResultOutput struct{ *pulumi.OutputState }

func (TalosMachineDisksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosMachineDisksResult)(nil)).Elem()
}

func (o TalosMachineDisksResultOutput) ToTalosMachineDisksResultOutput() TalosMachineDisksResultOutput {
	return o
}

func (o TalosMachineDisksResultOutput) ToTalosMachineDisksResultOutputWithContext(ctx context.Context) TalosMachineDisksResultOutput {
	return o
}

// The client configuration data
func (o TalosMachineDisksResultOutput) ClientConfiguration() TalosMachineDisksClientConfigurationOutput {
	return o.ApplyT(func(v TalosMachineDisksResult) TalosMachineDisksClientConfiguration { return v.ClientConfiguration }).(TalosMachineDisksClientConfigurationOutput)
}

// The disks that match the filters
func (o TalosMachineDisksResultOutput) Disks() TalosMachineDisksDiskArrayOutput {
	return o.ApplyT(func(v TalosMachineDisksResult) []TalosMachineDisksDisk { return v.Disks }).(TalosMachineDisksDiskArrayOutput)
}

// endpoint to use for the talosclient. if not set, the node value will be used
func (o TalosMachineDisksResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TalosMachineDisksResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Filters to apply to the disks
func (o TalosMachineDisksResultOutput) Filters() TalosMachineDisksFiltersPtrOutput {
	return o.ApplyT(func(v TalosMachineDisksResult) *TalosMachineDisksFilters { return v.Filters }).(TalosMachineDisksFiltersPtrOutput)
}

// The generated ID of this resource
func (o TalosMachineDisksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TalosMachineDisksResult) string { return v.Id }).(pulumi.StringOutput)
}

// controlplane node to retrieve the kubeconfig from
func (o TalosMachineDisksResultOutput) Node() pulumi.StringOutput {
	return o.ApplyT(func(v TalosMachineDisksResult) string { return v.Node }).(pulumi.StringOutput)
}

func (o TalosMachineDisksResultOutput) Timeouts() TalosMachineDisksTimeoutsPtrOutput {
	return o.ApplyT(func(v TalosMachineDisksResult) *TalosMachineDisksTimeouts { return v.Timeouts }).(TalosMachineDisksTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(TalosMachineDisksResultOutput{})
}
