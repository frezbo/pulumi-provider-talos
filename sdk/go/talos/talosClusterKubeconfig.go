// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package talos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve Kubeconfig for a Talos cluster
type TalosClusterKubeconfig struct {
	pulumi.CustomResourceState

	// endpoints to use
	Endpoints pulumi.StringArrayOutput `pulumi:"endpoints"`
	// The retrieved Kubeconfig
	KubeConfig pulumi.StringOutput `pulumi:"kubeConfig"`
	// nodes to use
	Nodes pulumi.StringArrayOutput `pulumi:"nodes"`
	// talos client configuration for authentication
	TalosConfig pulumi.StringOutput `pulumi:"talosConfig"`
}

// NewTalosClusterKubeconfig registers a new resource with the given unique name, arguments, and options.
func NewTalosClusterKubeconfig(ctx *pulumi.Context,
	name string, args *TalosClusterKubeconfigArgs, opts ...pulumi.ResourceOption) (*TalosClusterKubeconfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TalosConfig == nil {
		return nil, errors.New("invalid value for required argument 'TalosConfig'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TalosClusterKubeconfig
	err := ctx.RegisterResource("talos:index/talosClusterKubeconfig:TalosClusterKubeconfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTalosClusterKubeconfig gets an existing TalosClusterKubeconfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTalosClusterKubeconfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TalosClusterKubeconfigState, opts ...pulumi.ResourceOption) (*TalosClusterKubeconfig, error) {
	var resource TalosClusterKubeconfig
	err := ctx.ReadResource("talos:index/talosClusterKubeconfig:TalosClusterKubeconfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TalosClusterKubeconfig resources.
type talosClusterKubeconfigState struct {
	// endpoints to use
	Endpoints []string `pulumi:"endpoints"`
	// The retrieved Kubeconfig
	KubeConfig *string `pulumi:"kubeConfig"`
	// nodes to use
	Nodes []string `pulumi:"nodes"`
	// talos client configuration for authentication
	TalosConfig *string `pulumi:"talosConfig"`
}

type TalosClusterKubeconfigState struct {
	// endpoints to use
	Endpoints pulumi.StringArrayInput
	// The retrieved Kubeconfig
	KubeConfig pulumi.StringPtrInput
	// nodes to use
	Nodes pulumi.StringArrayInput
	// talos client configuration for authentication
	TalosConfig pulumi.StringPtrInput
}

func (TalosClusterKubeconfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*talosClusterKubeconfigState)(nil)).Elem()
}

type talosClusterKubeconfigArgs struct {
	// endpoints to use
	Endpoints []string `pulumi:"endpoints"`
	// nodes to use
	Nodes []string `pulumi:"nodes"`
	// talos client configuration for authentication
	TalosConfig string `pulumi:"talosConfig"`
}

// The set of arguments for constructing a TalosClusterKubeconfig resource.
type TalosClusterKubeconfigArgs struct {
	// endpoints to use
	Endpoints pulumi.StringArrayInput
	// nodes to use
	Nodes pulumi.StringArrayInput
	// talos client configuration for authentication
	TalosConfig pulumi.StringInput
}

func (TalosClusterKubeconfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*talosClusterKubeconfigArgs)(nil)).Elem()
}

type TalosClusterKubeconfigInput interface {
	pulumi.Input

	ToTalosClusterKubeconfigOutput() TalosClusterKubeconfigOutput
	ToTalosClusterKubeconfigOutputWithContext(ctx context.Context) TalosClusterKubeconfigOutput
}

func (*TalosClusterKubeconfig) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosClusterKubeconfig)(nil)).Elem()
}

func (i *TalosClusterKubeconfig) ToTalosClusterKubeconfigOutput() TalosClusterKubeconfigOutput {
	return i.ToTalosClusterKubeconfigOutputWithContext(context.Background())
}

func (i *TalosClusterKubeconfig) ToTalosClusterKubeconfigOutputWithContext(ctx context.Context) TalosClusterKubeconfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosClusterKubeconfigOutput)
}

// TalosClusterKubeconfigArrayInput is an input type that accepts TalosClusterKubeconfigArray and TalosClusterKubeconfigArrayOutput values.
// You can construct a concrete instance of `TalosClusterKubeconfigArrayInput` via:
//
//	TalosClusterKubeconfigArray{ TalosClusterKubeconfigArgs{...} }
type TalosClusterKubeconfigArrayInput interface {
	pulumi.Input

	ToTalosClusterKubeconfigArrayOutput() TalosClusterKubeconfigArrayOutput
	ToTalosClusterKubeconfigArrayOutputWithContext(context.Context) TalosClusterKubeconfigArrayOutput
}

type TalosClusterKubeconfigArray []TalosClusterKubeconfigInput

func (TalosClusterKubeconfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TalosClusterKubeconfig)(nil)).Elem()
}

func (i TalosClusterKubeconfigArray) ToTalosClusterKubeconfigArrayOutput() TalosClusterKubeconfigArrayOutput {
	return i.ToTalosClusterKubeconfigArrayOutputWithContext(context.Background())
}

func (i TalosClusterKubeconfigArray) ToTalosClusterKubeconfigArrayOutputWithContext(ctx context.Context) TalosClusterKubeconfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosClusterKubeconfigArrayOutput)
}

// TalosClusterKubeconfigMapInput is an input type that accepts TalosClusterKubeconfigMap and TalosClusterKubeconfigMapOutput values.
// You can construct a concrete instance of `TalosClusterKubeconfigMapInput` via:
//
//	TalosClusterKubeconfigMap{ "key": TalosClusterKubeconfigArgs{...} }
type TalosClusterKubeconfigMapInput interface {
	pulumi.Input

	ToTalosClusterKubeconfigMapOutput() TalosClusterKubeconfigMapOutput
	ToTalosClusterKubeconfigMapOutputWithContext(context.Context) TalosClusterKubeconfigMapOutput
}

type TalosClusterKubeconfigMap map[string]TalosClusterKubeconfigInput

func (TalosClusterKubeconfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TalosClusterKubeconfig)(nil)).Elem()
}

func (i TalosClusterKubeconfigMap) ToTalosClusterKubeconfigMapOutput() TalosClusterKubeconfigMapOutput {
	return i.ToTalosClusterKubeconfigMapOutputWithContext(context.Background())
}

func (i TalosClusterKubeconfigMap) ToTalosClusterKubeconfigMapOutputWithContext(ctx context.Context) TalosClusterKubeconfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosClusterKubeconfigMapOutput)
}

type TalosClusterKubeconfigOutput struct{ *pulumi.OutputState }

func (TalosClusterKubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosClusterKubeconfig)(nil)).Elem()
}

func (o TalosClusterKubeconfigOutput) ToTalosClusterKubeconfigOutput() TalosClusterKubeconfigOutput {
	return o
}

func (o TalosClusterKubeconfigOutput) ToTalosClusterKubeconfigOutputWithContext(ctx context.Context) TalosClusterKubeconfigOutput {
	return o
}

// endpoints to use
func (o TalosClusterKubeconfigOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TalosClusterKubeconfig) pulumi.StringArrayOutput { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// The retrieved Kubeconfig
func (o TalosClusterKubeconfigOutput) KubeConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosClusterKubeconfig) pulumi.StringOutput { return v.KubeConfig }).(pulumi.StringOutput)
}

// nodes to use
func (o TalosClusterKubeconfigOutput) Nodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TalosClusterKubeconfig) pulumi.StringArrayOutput { return v.Nodes }).(pulumi.StringArrayOutput)
}

// talos client configuration for authentication
func (o TalosClusterKubeconfigOutput) TalosConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosClusterKubeconfig) pulumi.StringOutput { return v.TalosConfig }).(pulumi.StringOutput)
}

type TalosClusterKubeconfigArrayOutput struct{ *pulumi.OutputState }

func (TalosClusterKubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TalosClusterKubeconfig)(nil)).Elem()
}

func (o TalosClusterKubeconfigArrayOutput) ToTalosClusterKubeconfigArrayOutput() TalosClusterKubeconfigArrayOutput {
	return o
}

func (o TalosClusterKubeconfigArrayOutput) ToTalosClusterKubeconfigArrayOutputWithContext(ctx context.Context) TalosClusterKubeconfigArrayOutput {
	return o
}

func (o TalosClusterKubeconfigArrayOutput) Index(i pulumi.IntInput) TalosClusterKubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TalosClusterKubeconfig {
		return vs[0].([]*TalosClusterKubeconfig)[vs[1].(int)]
	}).(TalosClusterKubeconfigOutput)
}

type TalosClusterKubeconfigMapOutput struct{ *pulumi.OutputState }

func (TalosClusterKubeconfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TalosClusterKubeconfig)(nil)).Elem()
}

func (o TalosClusterKubeconfigMapOutput) ToTalosClusterKubeconfigMapOutput() TalosClusterKubeconfigMapOutput {
	return o
}

func (o TalosClusterKubeconfigMapOutput) ToTalosClusterKubeconfigMapOutputWithContext(ctx context.Context) TalosClusterKubeconfigMapOutput {
	return o
}

func (o TalosClusterKubeconfigMapOutput) MapIndex(k pulumi.StringInput) TalosClusterKubeconfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TalosClusterKubeconfig {
		return vs[0].(map[string]*TalosClusterKubeconfig)[vs[1].(string)]
	}).(TalosClusterKubeconfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosClusterKubeconfigInput)(nil)).Elem(), &TalosClusterKubeconfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosClusterKubeconfigArrayInput)(nil)).Elem(), TalosClusterKubeconfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosClusterKubeconfigMapInput)(nil)).Elem(), TalosClusterKubeconfigMap{})
	pulumi.RegisterOutputType(TalosClusterKubeconfigOutput{})
	pulumi.RegisterOutputType(TalosClusterKubeconfigArrayOutput{})
	pulumi.RegisterOutputType(TalosClusterKubeconfigMapOutput{})
}
