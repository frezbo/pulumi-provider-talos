// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package talos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Generate machine configuration for a Talos control plane node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-talos/sdk/go/talos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			machineSecrets, err := talos.NewTalosMachineSecrets(ctx, "machineSecrets", nil)
//			if err != nil {
//				return err
//			}
//			talosconfig, err := talos.NewTalosClientConfiguration(ctx, "talosconfig", &talos.TalosClientConfigurationArgs{
//				ClusterName:    pulumi.String("example-cluster"),
//				MachineSecrets: machineSecrets.MachineSecrets,
//				Endpoints: pulumi.StringArray{
//					pulumi.String("10.5.0.2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = talos.NewTalosMachineConfigurationControlplane(ctx, "machineconfigCp", &talos.TalosMachineConfigurationControlplaneArgs{
//				ClusterName:     talosconfig.ClusterName,
//				ClusterEndpoint: pulumi.String("https://cluster.local:6443"),
//				MachineSecrets:  machineSecrets.MachineSecrets,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type TalosMachineConfigurationControlplane struct {
	pulumi.CustomResourceState

	// The endpoint of the Talos cluster
	ClusterEndpoint pulumi.StringOutput `pulumi:"clusterEndpoint"`
	// The name of the cluster in the generated config
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayOutput `pulumi:"configPatches"`
	// the desired machine config version to generate
	ConfigVersion pulumi.StringPtrOutput `pulumi:"configVersion"`
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled pulumi.BoolPtrOutput `pulumi:"docsEnabled"`
	// whether to render all machine configs with the commented examples
	ExamplesEnabled pulumi.BoolPtrOutput `pulumi:"examplesEnabled"`
	// desired kubernetes version to run
	KubernetesVersion pulumi.StringPtrOutput `pulumi:"kubernetesVersion"`
	// the generated control plane config
	MachineConfig pulumi.StringOutput `pulumi:"machineConfig"`
	// The machine secrets for the cluster
	MachineSecrets pulumi.StringOutput `pulumi:"machineSecrets"`
	// The version of Talos for which to generate configs
	TalosVersion pulumi.StringPtrOutput `pulumi:"talosVersion"`
}

// NewTalosMachineConfigurationControlplane registers a new resource with the given unique name, arguments, and options.
func NewTalosMachineConfigurationControlplane(ctx *pulumi.Context,
	name string, args *TalosMachineConfigurationControlplaneArgs, opts ...pulumi.ResourceOption) (*TalosMachineConfigurationControlplane, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'ClusterEndpoint'")
	}
	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.MachineSecrets == nil {
		return nil, errors.New("invalid value for required argument 'MachineSecrets'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TalosMachineConfigurationControlplane
	err := ctx.RegisterResource("talos:index/talosMachineConfigurationControlplane:TalosMachineConfigurationControlplane", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTalosMachineConfigurationControlplane gets an existing TalosMachineConfigurationControlplane resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTalosMachineConfigurationControlplane(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TalosMachineConfigurationControlplaneState, opts ...pulumi.ResourceOption) (*TalosMachineConfigurationControlplane, error) {
	var resource TalosMachineConfigurationControlplane
	err := ctx.ReadResource("talos:index/talosMachineConfigurationControlplane:TalosMachineConfigurationControlplane", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TalosMachineConfigurationControlplane resources.
type talosMachineConfigurationControlplaneState struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// The name of the cluster in the generated config
	ClusterName *string `pulumi:"clusterName"`
	// config patches to apply to the generated config
	ConfigPatches []string `pulumi:"configPatches"`
	// the desired machine config version to generate
	ConfigVersion *string `pulumi:"configVersion"`
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled *bool `pulumi:"docsEnabled"`
	// whether to render all machine configs with the commented examples
	ExamplesEnabled *bool `pulumi:"examplesEnabled"`
	// desired kubernetes version to run
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// the generated control plane config
	MachineConfig *string `pulumi:"machineConfig"`
	// The machine secrets for the cluster
	MachineSecrets *string `pulumi:"machineSecrets"`
	// The version of Talos for which to generate configs
	TalosVersion *string `pulumi:"talosVersion"`
}

type TalosMachineConfigurationControlplaneState struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint pulumi.StringPtrInput
	// The name of the cluster in the generated config
	ClusterName pulumi.StringPtrInput
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayInput
	// the desired machine config version to generate
	ConfigVersion pulumi.StringPtrInput
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled pulumi.BoolPtrInput
	// whether to render all machine configs with the commented examples
	ExamplesEnabled pulumi.BoolPtrInput
	// desired kubernetes version to run
	KubernetesVersion pulumi.StringPtrInput
	// the generated control plane config
	MachineConfig pulumi.StringPtrInput
	// The machine secrets for the cluster
	MachineSecrets pulumi.StringPtrInput
	// The version of Talos for which to generate configs
	TalosVersion pulumi.StringPtrInput
}

func (TalosMachineConfigurationControlplaneState) ElementType() reflect.Type {
	return reflect.TypeOf((*talosMachineConfigurationControlplaneState)(nil)).Elem()
}

type talosMachineConfigurationControlplaneArgs struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint string `pulumi:"clusterEndpoint"`
	// The name of the cluster in the generated config
	ClusterName string `pulumi:"clusterName"`
	// config patches to apply to the generated config
	ConfigPatches []string `pulumi:"configPatches"`
	// the desired machine config version to generate
	ConfigVersion *string `pulumi:"configVersion"`
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled *bool `pulumi:"docsEnabled"`
	// whether to render all machine configs with the commented examples
	ExamplesEnabled *bool `pulumi:"examplesEnabled"`
	// desired kubernetes version to run
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The machine secrets for the cluster
	MachineSecrets string `pulumi:"machineSecrets"`
	// The version of Talos for which to generate configs
	TalosVersion *string `pulumi:"talosVersion"`
}

// The set of arguments for constructing a TalosMachineConfigurationControlplane resource.
type TalosMachineConfigurationControlplaneArgs struct {
	// The endpoint of the Talos cluster
	ClusterEndpoint pulumi.StringInput
	// The name of the cluster in the generated config
	ClusterName pulumi.StringInput
	// config patches to apply to the generated config
	ConfigPatches pulumi.StringArrayInput
	// the desired machine config version to generate
	ConfigVersion pulumi.StringPtrInput
	// whether to render all machine configs adding the documentation for each field
	DocsEnabled pulumi.BoolPtrInput
	// whether to render all machine configs with the commented examples
	ExamplesEnabled pulumi.BoolPtrInput
	// desired kubernetes version to run
	KubernetesVersion pulumi.StringPtrInput
	// The machine secrets for the cluster
	MachineSecrets pulumi.StringInput
	// The version of Talos for which to generate configs
	TalosVersion pulumi.StringPtrInput
}

func (TalosMachineConfigurationControlplaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*talosMachineConfigurationControlplaneArgs)(nil)).Elem()
}

type TalosMachineConfigurationControlplaneInput interface {
	pulumi.Input

	ToTalosMachineConfigurationControlplaneOutput() TalosMachineConfigurationControlplaneOutput
	ToTalosMachineConfigurationControlplaneOutputWithContext(ctx context.Context) TalosMachineConfigurationControlplaneOutput
}

func (*TalosMachineConfigurationControlplane) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosMachineConfigurationControlplane)(nil)).Elem()
}

func (i *TalosMachineConfigurationControlplane) ToTalosMachineConfigurationControlplaneOutput() TalosMachineConfigurationControlplaneOutput {
	return i.ToTalosMachineConfigurationControlplaneOutputWithContext(context.Background())
}

func (i *TalosMachineConfigurationControlplane) ToTalosMachineConfigurationControlplaneOutputWithContext(ctx context.Context) TalosMachineConfigurationControlplaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosMachineConfigurationControlplaneOutput)
}

// TalosMachineConfigurationControlplaneArrayInput is an input type that accepts TalosMachineConfigurationControlplaneArray and TalosMachineConfigurationControlplaneArrayOutput values.
// You can construct a concrete instance of `TalosMachineConfigurationControlplaneArrayInput` via:
//
//	TalosMachineConfigurationControlplaneArray{ TalosMachineConfigurationControlplaneArgs{...} }
type TalosMachineConfigurationControlplaneArrayInput interface {
	pulumi.Input

	ToTalosMachineConfigurationControlplaneArrayOutput() TalosMachineConfigurationControlplaneArrayOutput
	ToTalosMachineConfigurationControlplaneArrayOutputWithContext(context.Context) TalosMachineConfigurationControlplaneArrayOutput
}

type TalosMachineConfigurationControlplaneArray []TalosMachineConfigurationControlplaneInput

func (TalosMachineConfigurationControlplaneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TalosMachineConfigurationControlplane)(nil)).Elem()
}

func (i TalosMachineConfigurationControlplaneArray) ToTalosMachineConfigurationControlplaneArrayOutput() TalosMachineConfigurationControlplaneArrayOutput {
	return i.ToTalosMachineConfigurationControlplaneArrayOutputWithContext(context.Background())
}

func (i TalosMachineConfigurationControlplaneArray) ToTalosMachineConfigurationControlplaneArrayOutputWithContext(ctx context.Context) TalosMachineConfigurationControlplaneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosMachineConfigurationControlplaneArrayOutput)
}

// TalosMachineConfigurationControlplaneMapInput is an input type that accepts TalosMachineConfigurationControlplaneMap and TalosMachineConfigurationControlplaneMapOutput values.
// You can construct a concrete instance of `TalosMachineConfigurationControlplaneMapInput` via:
//
//	TalosMachineConfigurationControlplaneMap{ "key": TalosMachineConfigurationControlplaneArgs{...} }
type TalosMachineConfigurationControlplaneMapInput interface {
	pulumi.Input

	ToTalosMachineConfigurationControlplaneMapOutput() TalosMachineConfigurationControlplaneMapOutput
	ToTalosMachineConfigurationControlplaneMapOutputWithContext(context.Context) TalosMachineConfigurationControlplaneMapOutput
}

type TalosMachineConfigurationControlplaneMap map[string]TalosMachineConfigurationControlplaneInput

func (TalosMachineConfigurationControlplaneMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TalosMachineConfigurationControlplane)(nil)).Elem()
}

func (i TalosMachineConfigurationControlplaneMap) ToTalosMachineConfigurationControlplaneMapOutput() TalosMachineConfigurationControlplaneMapOutput {
	return i.ToTalosMachineConfigurationControlplaneMapOutputWithContext(context.Background())
}

func (i TalosMachineConfigurationControlplaneMap) ToTalosMachineConfigurationControlplaneMapOutputWithContext(ctx context.Context) TalosMachineConfigurationControlplaneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosMachineConfigurationControlplaneMapOutput)
}

type TalosMachineConfigurationControlplaneOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigurationControlplaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosMachineConfigurationControlplane)(nil)).Elem()
}

func (o TalosMachineConfigurationControlplaneOutput) ToTalosMachineConfigurationControlplaneOutput() TalosMachineConfigurationControlplaneOutput {
	return o
}

func (o TalosMachineConfigurationControlplaneOutput) ToTalosMachineConfigurationControlplaneOutputWithContext(ctx context.Context) TalosMachineConfigurationControlplaneOutput {
	return o
}

// The endpoint of the Talos cluster
func (o TalosMachineConfigurationControlplaneOutput) ClusterEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringOutput { return v.ClusterEndpoint }).(pulumi.StringOutput)
}

// The name of the cluster in the generated config
func (o TalosMachineConfigurationControlplaneOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringOutput { return v.ClusterName }).(pulumi.StringOutput)
}

// config patches to apply to the generated config
func (o TalosMachineConfigurationControlplaneOutput) ConfigPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringArrayOutput { return v.ConfigPatches }).(pulumi.StringArrayOutput)
}

// the desired machine config version to generate
func (o TalosMachineConfigurationControlplaneOutput) ConfigVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringPtrOutput { return v.ConfigVersion }).(pulumi.StringPtrOutput)
}

// whether to render all machine configs adding the documentation for each field
func (o TalosMachineConfigurationControlplaneOutput) DocsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.BoolPtrOutput { return v.DocsEnabled }).(pulumi.BoolPtrOutput)
}

// whether to render all machine configs with the commented examples
func (o TalosMachineConfigurationControlplaneOutput) ExamplesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.BoolPtrOutput { return v.ExamplesEnabled }).(pulumi.BoolPtrOutput)
}

// desired kubernetes version to run
func (o TalosMachineConfigurationControlplaneOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringPtrOutput { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// the generated control plane config
func (o TalosMachineConfigurationControlplaneOutput) MachineConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringOutput { return v.MachineConfig }).(pulumi.StringOutput)
}

// The machine secrets for the cluster
func (o TalosMachineConfigurationControlplaneOutput) MachineSecrets() pulumi.StringOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringOutput { return v.MachineSecrets }).(pulumi.StringOutput)
}

// The version of Talos for which to generate configs
func (o TalosMachineConfigurationControlplaneOutput) TalosVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosMachineConfigurationControlplane) pulumi.StringPtrOutput { return v.TalosVersion }).(pulumi.StringPtrOutput)
}

type TalosMachineConfigurationControlplaneArrayOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigurationControlplaneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TalosMachineConfigurationControlplane)(nil)).Elem()
}

func (o TalosMachineConfigurationControlplaneArrayOutput) ToTalosMachineConfigurationControlplaneArrayOutput() TalosMachineConfigurationControlplaneArrayOutput {
	return o
}

func (o TalosMachineConfigurationControlplaneArrayOutput) ToTalosMachineConfigurationControlplaneArrayOutputWithContext(ctx context.Context) TalosMachineConfigurationControlplaneArrayOutput {
	return o
}

func (o TalosMachineConfigurationControlplaneArrayOutput) Index(i pulumi.IntInput) TalosMachineConfigurationControlplaneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TalosMachineConfigurationControlplane {
		return vs[0].([]*TalosMachineConfigurationControlplane)[vs[1].(int)]
	}).(TalosMachineConfigurationControlplaneOutput)
}

type TalosMachineConfigurationControlplaneMapOutput struct{ *pulumi.OutputState }

func (TalosMachineConfigurationControlplaneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TalosMachineConfigurationControlplane)(nil)).Elem()
}

func (o TalosMachineConfigurationControlplaneMapOutput) ToTalosMachineConfigurationControlplaneMapOutput() TalosMachineConfigurationControlplaneMapOutput {
	return o
}

func (o TalosMachineConfigurationControlplaneMapOutput) ToTalosMachineConfigurationControlplaneMapOutputWithContext(ctx context.Context) TalosMachineConfigurationControlplaneMapOutput {
	return o
}

func (o TalosMachineConfigurationControlplaneMapOutput) MapIndex(k pulumi.StringInput) TalosMachineConfigurationControlplaneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TalosMachineConfigurationControlplane {
		return vs[0].(map[string]*TalosMachineConfigurationControlplane)[vs[1].(string)]
	}).(TalosMachineConfigurationControlplaneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigurationControlplaneInput)(nil)).Elem(), &TalosMachineConfigurationControlplane{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigurationControlplaneArrayInput)(nil)).Elem(), TalosMachineConfigurationControlplaneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosMachineConfigurationControlplaneMapInput)(nil)).Elem(), TalosMachineConfigurationControlplaneMap{})
	pulumi.RegisterOutputType(TalosMachineConfigurationControlplaneOutput{})
	pulumi.RegisterOutputType(TalosMachineConfigurationControlplaneArrayOutput{})
	pulumi.RegisterOutputType(TalosMachineConfigurationControlplaneMapOutput{})
}
